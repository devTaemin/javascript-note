// 1) 원시값과 메서드
//  : 자바스크립트는 원시값을 마치 객체처럼 다룰 수 있게 해준다.
//  : (원시값) -> string, number, bigint, boolean, symbol, null, undefined
//  : (객체) -> 프로퍼티를 이용하여 다양한 종류의 값을 저장할 수 있으며 함수를 프로퍼티로 저장할 수 있다.


// 2) 원시값을 객체처럼 사용하기
//  : 문자열이나 숫자와 같은 원시값을 빠르고 가볍게 사용할 수 있는데, 메서드를 사용하면 작업이 용이할 수 있을 것 같다.
//  : 해결책
//      -> 원시값은 원시값 그대로 남겨둬서 단일 값 형태를 유지한다.
//      -> 문자열, 숫자, 불린, 심볼의 메서드와 프로퍼티에 접근할 수 있도록 언어 차원에서 허용한다.
//      -> 이를 위해 "원시 래퍼 객체(object wrapper)"를 만들어 준다.

//  : 예시
let str = "hello";
console.log( str.toUpperCase() );
//  (1) 문자열 str은 원시값이므로 원시값의 프로퍼티에 접근하는 순간 원시 래퍼 객체가 만들어진다
//  (2) 메서드가 실행되고, 새로운 문자열이 반환된다.
//  (3) 특별한 객체는 파괴되고 원시값 str만 남게된다.

//  : 예시
let n = 1.23456;
console.log( n.toFixed(2) );


// 3) 주의사항
//  : String, Number, Boolean을 생성자로는 사용하지 않는다.
//  : Null, Undefined는 메서드가 존재하지 않는다.
//  : 엄격모드에서는 래퍼 객체를 수정하려 할 때 에러가 발생한다.
